I"Û+<script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>

<h1 id="1-motivation">1. Motivation</h1>

<p>The standard maximum likelihood estimation (MLE) problem solves for</p>

\[\theta^{*} = \arg \max_{\theta}\ell(\theta),\]

<p>the parameter that maximizes the log-likelihood of observed data \(\ell(\theta)\), given a statistical model. However, in incomplete data scenarios with unobserved latent variable $Z$, simultaneously solving for $z, \theta$ to maximize the log-likelihood $\ell(\theta, z)$ can be impossible. Conversely, if $z$ were observed, the estimation problem would be easily solvable.</p>

<p>The expectation-maximization (EM) algorithm is a method to solve for a local maximum likelihood estimate of $\theta$ numerically in incomplete data scenarios, alternating maximization between the two sets of unknowns, keeping the other set fixed. This idea is also known as coordinate ascent.</p>

<h1 id="2-algorithm">2. Algorithm</h1>

<p>The following presentation is largely based on the notes written by Andrew Ng [1]. Given a dataset of ${x^{(1)},â€¦,x^{(m)}}$ of $m$ independent samples, the log-likelihood is given by</p>

\[\ell(\theta) = \sum_{i = 1}^{m}\log p(x^{(i)}; \theta) = \sum_{i = 1}^{m}\log \sum_{z}p(x^{(i)}, z^{(i)}; \theta),\]

<p>where $Z$ is an unknown discrete random variable ($z$â€™s are outcome values). Now for any distribution $z^{(i)} \sim Q_{i}$ (i.e. $Q_{i}(z^{(i)})$), we can further rewrite $\ell(\theta)$</p>

\[\begin{align*}
\ell(\theta) &amp;= \sum_{i = 1}^{m}\log \sum_{z^{(i)}}p(x^{(i)}, z^{(i)}; \theta)\\
&amp;= \sum_{i=1}^{m}\log\sum_{z^{(i)}}Q_{i}(z^{(i)})\frac{p(x^{(i)}, z^{(i)};\theta)}{Q_{i}(z^{(i)})}\\
&amp;\geq \sum_{i=1}^{m}\sum_{z^{(i)}}Q_{i}(z^{(i)})\log\frac{p(x^{(i)}, z^{(i)};\theta)}{Q_{i}(z^{(i)})}.
\end{align*}\]

<p>The inequality above is due to Jensenâ€™s inequality applied to concave functions. Jensenâ€™s inequality states that for a convex function $f$ and random variable $X$, the following inequality $\mathbb{E}[f(X)] \geq f(\mathbb{E}[X])$ is true. One way to easily recall the direction of inequality is using the variance formula $Var(X) = \mathbb{E}[X^{2}] - \mathbb{E}[X]^{2} \geq 0 \iff \mathbb{E}[X^{2}] \geq \mathbb{E}[X]^{2}$, where $f(x) = x^{2}$ is a convex function.</p>

<p>Now the expectation and maximization steps can be derived. The expectation step considers current $\theta$ value fixed and sets $Q_{i}(z^{(i)})$ so that the inequality above becomes equality. Start by noticing that</p>

\[\log\sum_{z^{(i)}}\frac{p(z^{(i)}, x^{(i)};\theta)}{Q_{i}(z^{(i)})}Q_{i}(z^{(i)}) = g\Big(\mathbb{E}\Big[\frac{p(z^{(j)}, x^{(i)};\theta)}{Q_{i}(z^{(i)})}\Big]\Big)\]

<p>and</p>

\[\sum_{z^{(i)}}Q_{i}(z^{(i)})\log\frac{p(z^{(i)}, x^{(i)};\theta)}{Q_{i}(z^{(i)})} = 
\mathbb{E}\Big[g\left(\frac{p(z^{(i)}, x^{(i)};\theta)}{Q_{i}(z^{(i)})}\right)\Big],\]

<p>which are summation terms to the left and right of the inequality respectively. Jensenâ€™s inequality for concave functions state $g\Big(\mathbb{E}\Big[\frac{p(z^{(j)}, x^{(i)};\theta)}{Q_{i}(z^{(i)})}\Big]\Big) \geq \mathbb{E}\Big[g\left(\frac{p(z^{(i)}, x^{(i)};\theta)}{Q_{i}(z^{(i)})}\right)\Big]$. It is easy to see that in order for equality to be achieved, $\frac{p(z^{(j)}, x^{(i)};\theta)}{Q_{i}(z^{(i)})} = c$ for some constant $c$, since $g(\mathbb{E}[c]) = g(c) = \mathbb{E}[g(c)]$. Choosing $Q_{i}(z^{(i)}) \propto p(x^{(i)}, z^{(i)}; \theta)$ is sufficient to achieve constant value. For $Q_{i}$ to remain a probability distribution, set</p>

\[\begin{align*}
Q_{i}(z^{(i)}) &amp;= \frac{p(x^{(i)}, z^{(i)};\theta)}{\sum_{z^{(i)}}p(x^{(i)}, z^{(i)};\theta)}\\
&amp;=\frac{p(x^{(i)}, z^{(i)};\theta)}{p(x^{(i)};\theta)}\\
&amp;=p(z^{(i)}|x^{(i)};\theta),
\end{align*}\]

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">phi</span> <span class="o">=</span> <span class="mf">0.75</span>
<span class="n">thetaA</span> <span class="o">=</span> <span class="mf">0.25</span>
<span class="n">thetaB</span> <span class="o">=</span> <span class="mf">0.60</span>

<span class="n">m</span> <span class="o">=</span> <span class="mi">500</span>

<span class="n">numA</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">binomial</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">phi</span><span class="p">)</span>
<span class="n">numB</span> <span class="o">=</span> <span class="n">m</span> <span class="o">-</span> <span class="n">numA</span>

<span class="c1"># generate coin tosses from coin A
</span><span class="n">tossesA</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">binomial</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="n">thetaA</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">numA</span><span class="p">)])</span>
<span class="n">tossesB</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">binomial</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="n">thetaB</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">numB</span><span class="p">)])</span>

<span class="n">tosses</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">((</span><span class="n">tossesA</span><span class="p">,</span> <span class="n">tossesB</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">algorithmCoin</span> <span class="o">=</span> <span class="n">EM_coin</span><span class="p">(</span><span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">estimates</span> <span class="o">=</span> <span class="n">algorithmCoin</span><span class="p">.</span><span class="n">train</span><span class="p">(</span><span class="n">tosses</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Estimates: thetaA ="</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">estimates</span><span class="p">[</span><span class="s">"thetaA"</span><span class="p">],</span> <span class="mi">3</span><span class="p">)),</span> 
      <span class="s">"; thetaB ="</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">estimates</span><span class="p">[</span><span class="s">"thetaB"</span><span class="p">],</span> <span class="mi">3</span><span class="p">)),</span> 
      <span class="s">"; phi ="</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">estimates</span><span class="p">[</span><span class="s">"phi"</span><span class="p">],</span> <span class="mi">3</span><span class="p">)))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1.  thetaA: 0.4, thetaB: 0.6, phi: 0.5
2.  thetaA: 0.258, thetaB: 0.522, phi: 0.727
3.  thetaA: 0.245, thetaB: 0.55, phi: 0.723
4.  thetaA: 0.241, thetaB: 0.561, phi: 0.724
5.  thetaA: 0.241, thetaB: 0.566, phi: 0.727
6.  thetaA: 0.241, thetaB: 0.569, phi: 0.73
7.  thetaA: 0.242, thetaB: 0.571, phi: 0.733
8.  thetaA: 0.242, thetaB: 0.572, phi: 0.736
9.  thetaA: 0.243, thetaB: 0.574, phi: 0.738
10.  thetaA: 0.243, thetaB: 0.575, phi: 0.74
11.  thetaA: 0.244, thetaB: 0.576, phi: 0.742
12.  thetaA: 0.244, thetaB: 0.578, phi: 0.744
13.  thetaA: 0.245, thetaB: 0.578, phi: 0.745
14.  thetaA: 0.245, thetaB: 0.579, phi: 0.747
15.  thetaA: 0.245, thetaB: 0.58, phi: 0.748
16.  thetaA: 0.245, thetaB: 0.581, phi: 0.749
17.  thetaA: 0.246, thetaB: 0.581, phi: 0.75
18.  thetaA: 0.246, thetaB: 0.582, phi: 0.75
19.  thetaA: 0.246, thetaB: 0.582, phi: 0.751
20.  thetaA: 0.246, thetaB: 0.583, phi: 0.752
21.  thetaA: 0.246, thetaB: 0.583, phi: 0.752
Estimates: thetaA = 0.246 ; thetaB = 0.583 ; phi = 0.753
</code></pre></div></div>

<p>Youâ€™ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyllâ€™s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>

:ET